// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAPI.Models;

namespace TravelAPI.Migrations
{
    [DbContext(typeof(TravelAPIContext))]
    [Migration("20210120185532_TestRemoveDestinationFromReview")]
    partial class TestRemoveDestinationFromReview
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelAPI.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("State");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            City = "Barcelona",
                            Country = "Spain",
                            State = "Catalonia"
                        },
                        new
                        {
                            DestinationId = 2,
                            City = "Portland",
                            Country = "USA",
                            State = "Oregon"
                        },
                        new
                        {
                            DestinationId = 3,
                            City = "Denpasar",
                            Country = "Bali",
                            State = ""
                        },
                        new
                        {
                            DestinationId = 4,
                            City = "Helsinki",
                            Country = "Finland",
                            State = "Etela Province"
                        },
                        new
                        {
                            DestinationId = 5,
                            City = "Perth",
                            Country = "Australia",
                            State = "Western Australia"
                        });
                });

            modelBuilder.Entity("TravelAPI.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<int>("DestinationId");

                    b.Property<int>("Rating");

                    b.Property<string>("Title");

                    b.Property<bool>("WouldRecommend");

                    b.HasKey("ReviewId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Body = "Pretty good.",
                            DestinationId = 1,
                            Rating = 4,
                            Title = "Review #01",
                            WouldRecommend = true
                        },
                        new
                        {
                            ReviewId = 2,
                            Body = "Pretty good.",
                            DestinationId = 1,
                            Rating = 4,
                            Title = "Review #01",
                            WouldRecommend = true
                        },
                        new
                        {
                            ReviewId = 3,
                            Body = "Pretty bad.",
                            DestinationId = 2,
                            Rating = 2,
                            Title = "Review #02",
                            WouldRecommend = false
                        },
                        new
                        {
                            ReviewId = 4,
                            Body = "Amaaaaaaaazing",
                            DestinationId = 3,
                            Rating = 5,
                            Title = "Review #03",
                            WouldRecommend = true
                        },
                        new
                        {
                            ReviewId = 5,
                            Body = "Middle of the Road",
                            DestinationId = 3,
                            Rating = 3,
                            Title = "Review #04",
                            WouldRecommend = false
                        });
                });

            modelBuilder.Entity("TravelAPI.Models.Review", b =>
                {
                    b.HasOne("TravelAPI.Models.Destination")
                        .WithMany("Reviews")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
